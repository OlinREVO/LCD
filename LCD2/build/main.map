Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                              build/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              build/KS0108.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
LOAD build/main.o
LOAD build/KS0108.o
LOAD build/KS0108-AVR.o
LOAD build/graphic.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x874
 *(.vectors)
 .vectors       0x0000000000000000       0x7c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000007c                . = ALIGN (0x2)
                0x000000000000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007c                __ctors_start = .
 *(.ctors)
                0x000000000000007c                __ctors_end = .
                0x000000000000007c                __dtors_start = .
 *(.dtors)
                0x000000000000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007c        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
                0x000000000000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007c        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000088       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000088                __do_copy_data
 .init4         0x000000000000009e       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ae        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
                0x00000000000000b6                __vector_22
                0x00000000000000b6                __vector_28
                0x00000000000000b6                __vector_1
                0x00000000000000b6                __vector_24
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_23
                0x00000000000000b6                __vector_30
                0x00000000000000b6                __vector_25
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_19
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_27
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_21
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_29
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_26
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_18
                0x00000000000000b6                __vector_20
 .text          0x00000000000000ba      0x146 build/main.o
                0x00000000000000ba                GLCD_Delay
                0x00000000000000be                GLCD_EnableController
                0x00000000000000d2                GLCD_DisableController
                0x00000000000000e6                GLCD_ReadStatus
                0x000000000000010c                GLCD_WriteCommand
                0x0000000000000140                GLCD_ReadData
                0x0000000000000196                GLCD_WriteData
                0x00000000000001ec                GLCD_InitalizePorts
                0x00000000000001fa                GLCD_ReadByteFromROMMemory
 .text          0x0000000000000200      0x1c8 build/KS0108.o
                0x0000000000000200                GLCD_Initalize
                0x000000000000021c                GLCD_GoTo
                0x0000000000000284                GLCD_ClearScreen
                0x00000000000002ac                GLCD_WriteChar
                0x00000000000002ea                GLCD_WriteString
                0x0000000000000302                GLCD_SetPixel
                0x0000000000000352                GLCD_Bitmap
 .text          0x00000000000003c8      0x146 build/KS0108-AVR.o
 .text          0x000000000000050e      0x2d8 build/graphic.o
                0x000000000000050e                GLCD_Rectangle
                0x000000000000058e                GLCD_Circle
                0x000000000000069c                GLCD_Line
 .text          0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000007e6                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000007e6       0x8a build/main.o
                0x00000000000007e6                main
 .text.libgcc.mul
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000870                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000870        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x0000000000000870                exit
                0x0000000000000870                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000870        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000874                _etext = .

.data           0x0000000000800100      0x27c load address 0x0000000000000874
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 .data          0x0000000000800100        0x0 build/main.o
 .data          0x0000000000800100        0x0 build/KS0108.o
 .data          0x0000000000800100        0x0 build/KS0108-AVR.o
 .data          0x0000000000800100        0x0 build/graphic.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800100      0x1e0 build/KS0108.o
 .rodata        0x00000000008002e0        0x1 build/graphic.o
                0x00000000008002e0                color
 *(.rodata*)
 .rodata.str1.1
                0x00000000008002e1       0x9a build/main.o
 *(.gnu.linkonce.d*)
                0x000000000080037c                . = ALIGN (0x2)
 *fill*         0x000000000080037b        0x1 00
                0x000000000080037c                _edata = .
                0x000000000080037c                PROVIDE (__data_end, .)

.bss            0x000000000080037c        0x2
                0x000000000080037c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080037c        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 .bss           0x000000000080037c        0x0 build/main.o
 .bss           0x000000000080037c        0x2 build/KS0108.o
                0x000000000080037c                screen_y
                0x000000000080037d                screen_x
 .bss           0x000000000080037e        0x0 build/KS0108-AVR.o
 .bss           0x000000000080037e        0x0 build/graphic.o
 .bss           0x000000000080037e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080037e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080037e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x000000000080037e                PROVIDE (__bss_end, .)
                0x0000000000000874                __data_load_start = LOADADDR (.data)
                0x0000000000000af0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080037e        0x0
                0x000000000080037e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080037e                PROVIDE (__noinit_end, .)
                0x000000000080037e                _end = .
                0x000000000080037e                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x23d0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 .stab          0x00000000000006cc      0x9b4 build/main.o
                                        0x9c0 (size before relaxing)
 .stab          0x0000000000001080      0x624 build/KS0108.o
                                        0x630 (size before relaxing)
 .stab          0x00000000000016a4      0x690 build/KS0108-AVR.o
                                        0x87c (size before relaxing)
 .stab          0x0000000000001d34      0x69c build/graphic.o
                                        0x6a8 (size before relaxing)

.stabstr        0x0000000000000000      0xc9c
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc9c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 build/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 build/KS0108.o
 .comment       0x0000000000000000       0x12 build/KS0108-AVR.o
 .comment       0x0000000000000000       0x12 build/graphic.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(build/main.elf elf32-avr)
LOAD linker stubs
