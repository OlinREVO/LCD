Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
                              build/lcd.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                              build/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              build/main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

ks0108FontColor     0x1               build/lcd.o
ks0108Coord         0x3               build/lcd.o
win                 0x4               build/main.o
ks0108FontRead      0x2               build/lcd.o
ks0108Font          0x2               build/lcd.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
LOAD build/main.o
LOAD build/lcd.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xe1c
 *(.vectors)
 .vectors       0x0000000000000000       0x7c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000007c                . = ALIGN (0x2)
                0x000000000000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007c                __ctors_start = .
 *(.ctors)
                0x000000000000007c                __ctors_end = .
                0x000000000000007c                __dtors_start = .
 *(.dtors)
                0x000000000000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007c        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
                0x000000000000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007c        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000088       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000088                __do_copy_data
 .init4         0x000000000000009e       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ae        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
                0x00000000000000b6                __vector_22
                0x00000000000000b6                __vector_28
                0x00000000000000b6                __vector_1
                0x00000000000000b6                __vector_24
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_23
                0x00000000000000b6                __vector_30
                0x00000000000000b6                __vector_25
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_19
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_27
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_21
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_29
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_26
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_18
                0x00000000000000b6                __vector_20
 .text          0x00000000000000ba       0x2e build/main.o
                0x00000000000000ba                delay1s
 .text          0x00000000000000e8      0xc94 build/lcd.o
                0x00000000000000e8                ks0108ReadFontData
                0x00000000000000ee                ks0108SelectFont
                0x0000000000000104                ks0108CharWidth
                0x0000000000000180                ks0108StringWidth
                0x00000000000001aa                ks0108StringWidth_P
                0x00000000000001e0                ks0108Enable
                0x000000000000020c                ks0108WriteCommand
                0x0000000000000230                ks0108GotoXY
                0x0000000000000278                ks0108DoReadData
                0x00000000000002f2                ks0108ReadData
                0x00000000000002fe                ks0108WriteData
                0x00000000000003f8                ks0108PutChar
                0x0000000000000600                ks0108Puts_P
                0x0000000000000650                ks0108Puts
                0x000000000000069c                ks0108SetDot
                0x00000000000006e2                ks0108InvertRect
                0x00000000000007f0                ks0108SetInverted
                0x0000000000000810                ks0108FillRect
                0x0000000000000924                ks0108Init
                0x0000000000000972                ks0108DrawRoundRect
                0x0000000000000b3e                ks0108DrawRect
                0x0000000000000b8e                ks0108DrawLine
 .text          0x0000000000000d7c        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000d7c        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000d7c        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000d7c        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000d7c        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000d7c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000d7c       0x4c build/main.o
                0x0000000000000d7c                main
 .text.libgcc.mul
                0x0000000000000dc8        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000dc8       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000000dc8                __divmodhi4
                0x0000000000000dc8                _div
 .text.libgcc   0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000df0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000df0       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000df0                __udivmodhi4
 .text.libgcc   0x0000000000000e18        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000e18        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000e18        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000e18        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000e18                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000e18        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x0000000000000e18                exit
                0x0000000000000e18                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000e18        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000e1c                _etext = .

.data           0x0000000000800100        0xe load address 0x0000000000000e1c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 .data          0x0000000000800100        0x0 build/main.o
 .data          0x0000000000800100        0x0 build/lcd.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800100        0xd build/main.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080010e                . = ALIGN (0x2)
 *fill*         0x000000000080010d        0x1 00
                0x000000000080010e                _edata = .
                0x000000000080010e                PROVIDE (__data_end, .)

.bss            0x000000000080010e        0xd
                0x000000000080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080010e        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 .bss           0x000000000080010e        0x0 build/main.o
 .bss           0x000000000080010e        0x1 build/lcd.o
                0x000000000080010e                ks0108Inverted
 .bss           0x000000000080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080010f        0x4 build/main.o
                0x000000000080010f                win
 COMMON         0x0000000000800113        0x8 build/lcd.o
                0x0000000000800113                ks0108FontColor
                0x0000000000800114                ks0108Coord
                0x0000000000800117                ks0108FontRead
                0x0000000000800119                ks0108Font
                0x000000000080011b                PROVIDE (__bss_end, .)
                0x0000000000000e1c                __data_load_start = LOADADDR (.data)
                0x0000000000000e2a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080011b        0x0
                0x000000000080011b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080011b                PROVIDE (__noinit_end, .)
                0x000000000080011b                _end = .
                0x000000000080011b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x27cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o
 .stab          0x00000000000006cc      0x48c build/main.o
                                        0x498 (size before relaxing)
 .stab          0x0000000000000b58     0x1c74 build/lcd.o
                                       0x1e78 (size before relaxing)

.stabstr        0x0000000000000000      0xd72
 *(.stabstr)
 .stabstr       0x0000000000000000      0xd72 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm16m1.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 build/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 build/lcd.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(build/main.elf elf32-avr)
LOAD linker stubs
